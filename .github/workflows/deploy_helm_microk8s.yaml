name: MicroK8S deployment

on:
  workflow_call:
    inputs:
      kubernetes_namespace:
        description: 'Namespace to deploy'
        default: tools
        type: string
      helm_release:
        description: 'Name of the release'
        required: true
        type: string
      has_dependency:
        description: 'Flag to set if your chart has dependency'
        required: false
        default: false
        type: boolean
    secrets:
      MICROK8S_CONFIG:
      additional_set:

jobs:
  Install-Helm:
    name: Install Helm
    runs-on: arc-runner-set
    steps:
      - name: Cache Helm Binary
        uses: actions/cache@v3
        with:
          path: ~/.local/bin/helm  # Change to a non-root directory
          key: helm-${{ runner.os }}
    
      - name: Install Helm (if not cached)
        run: |
          mkdir -p ~/.local/bin
          if [ ! -f "~/.local/bin/helm" ]; then
            curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
            mv /usr/local/bin/helm ~/.local/bin/helm
          fi
          chmod +x ~/.local/bin/helm
          echo "$HOME/.local/bin" >> $GITHUB_PATH  # Add to PATH

  Lint:
    name: Linter
    runs-on: arc-runner-set
    needs: Install-Helm
    steps:
      - uses: actions/checkout@v4
      - name: Restore Cached Helm
        uses: actions/cache@v3
        with:
          path: ~/.local/bin/helm
          key: helm-${{ runner.os }}

      - name: Verify Helm Installation
        run: |
          if ! command -v helm &> /dev/null; then
            echo "Helm not found, installing..."
            curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
            mv /usr/local/bin/helm ~/.local/bin/helm
          fi
          chmod +x ~/.local/bin/helm
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          helm version
      
      - name: Running Linter
        run: helm lint helm_chart/
        shell: bash

  Deployment:
    name: Deploy on MicroK8S Cluster
    runs-on: arc-runner-set
    needs: [Install-Helm, Lint]
    steps:
      - uses: actions/checkout@v4
      - name: Restore Cached Helm
        uses: actions/cache@v3
        with:
          path: ~/.local/bin/helm
          key: helm-${{ runner.os }}

      - name: Verify Helm Installation
        run: |
          if ! command -v helm &> /dev/null; then
            echo "Helm not found, installing..."
            curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
            mv /usr/local/bin/helm ~/.local/bin/helm
          fi
          chmod +x ~/.local/bin/helm
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          helm version

      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.MICROK8S_CONFIG }}
      
      - name: Helm Dependency Update
        if: ${{ inputs.has_dependency }}
        run: helm dependency update helm_chart/
        shell: bash

      - name: Install Chart 
        run: |
          if [ -n "${{ secrets.additional_set }}" ]; then
            helm upgrade --install ${{ inputs.helm_release }} -n ${{ inputs.kubernetes_namespace }} --set ${{ secrets.additional_set }} --create-namespace helm_chart/
          else
            helm upgrade --install ${{ inputs.helm_release }} -n ${{ inputs.kubernetes_namespace }} --create-namespace helm_chart/
          fi  
        shell: bash