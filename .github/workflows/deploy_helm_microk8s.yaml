name: MicroK8S deployment

on:
  workflow_call:
    inputs:
      kubernetes_namespace:
        description: 'Namespace to deploy'
        default: tools
        type: string
      helm_release:
        description: 'Name of the release'
        required: true
        type: string
      has_dependency:
        description: 'Flag to set if your chart has dependency'
        required: false
        default: false
        type: boolean
    secrets:
      MICROK8S_CONFIG:
      additional_set:

jobs:
  Install-Helm:
    name: Install Helm
    runs-on: arc-runner-set
    steps:
      - name: Install Helm
        run: |
          sudo apt update -y && sudo apt install -y curl
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          echo "HELM_PATH=$(which helm)" >> "$GITHUB_ENV"
        shell: bash

  Lint:
    name: Linter
    runs-on: arc-runner-set
    needs: Install-Helm
    steps:
      - uses: actions/checkout@v4
      - name: Running Linter with Helm
        run: |
          ${{ env.HELM_PATH }} lint .
        shell: bash

  Deployment:
    name: Deploy on MicroK8S Cluster
    runs-on: arc-runner-set
    needs: [Install-Helm, Lint]
    steps:
      - uses: actions/checkout@v4
      - name: Use Helm Binary
        run: |
          ${{ env.HELM_PATH }} version
        shell: bash
      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.MICROK8S_CONFIG }}
      
      # Conditionally update dependencies if flag is true
      - name: Helm Dependency Update
        if: ${{ inputs.has_dependency }}
        run: |
          ${{ env.HELM_PATH }} dependency update
        shell: bash
      
      - name: Install Chart (Basic)
        run: |
          ${{ env.HELM_PATH }} upgrade --install ${{ inputs.helm_release }} -n ${{ inputs.kubernetes_namespace }} --create-namespace .
        shell: bash
      
      - name: Install Chart with Additional Values
        run: |
          if [ -n "${{ secrets.additional_set }}" ]; then
            ${{ env.HELM_PATH }} upgrade --install ${{ inputs.helm_release }} -n ${{ inputs.kubernetes_namespace }} --set ${{ secrets.additional_set }} --create-namespace .
          else
            echo "Skipping additional set values as they are empty."
          fi
        shell: bash
